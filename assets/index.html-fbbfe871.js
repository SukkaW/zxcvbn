import{_ as e,M as t,p as o,q as p,Q as n,t as s,N as c,a1 as i}from"./framework-9e042e77.js";const l={},u=n("h1",{id:"lazy-loading",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lazy-loading","aria-hidden":"true"},"#"),s(" Lazy loading")],-1),r=n("p",null,"The dictionaries are sizable, so it is recommended to use lazy loading.",-1),d=n("h2",{id:"webpack",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webpack","aria-hidden":"true"},"#"),s(" Webpack")],-1),k={href:"https://webpack.js.org/guides/lazy-loading/",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>Here&#39;s how you import it:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> zxcvbn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/core&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This is how you lazy load dictionaries:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">loadOptions</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> zxcvbnCommonPackage <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span>
    <span class="token comment">/* webpackChunkName: &quot;zxcvbnCommonPackage&quot; */</span> <span class="token string">&#39;@zxcvbn-ts/language-common&#39;</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">const</span> zxcvbnEnPackage <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span>
    <span class="token comment">/* webpackChunkName: &quot;zxcvbnEnPackage&quot; */</span> <span class="token string">&#39;@zxcvbn-ts/language-en&#39;</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">dictionary</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>zxcvbnCommonPackage<span class="token punctuation">.</span>default<span class="token punctuation">.</span>dictionary<span class="token punctuation">,</span>
      <span class="token operator">...</span>zxcvbnEnPackage<span class="token punctuation">.</span>default<span class="token punctuation">.</span>dictionary<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">graphs</span><span class="token operator">:</span> zxcvbnCommonPackage<span class="token punctuation">.</span>default<span class="token punctuation">.</span>adjacencyGraphs<span class="token punctuation">,</span>
    <span class="token literal-property property">translations</span><span class="token operator">:</span> zxcvbnEnPackage<span class="token punctuation">.</span>default<span class="token punctuation">.</span>translations<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Somewhere in your application you can call the &quot;loadOptions&quot; function, then the dictionary load is executed.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//</span>
<span class="token comment">// [your other code]</span>
<span class="token comment">//</span>
<span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token string">&#39;asdnlja978o&#39;</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  zxcvbnOptions<span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token function">zxcvbn</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fetch" tabindex="-1"><a class="header-anchor" href="#fetch" aria-hidden="true">#</a> Fetch</h2><p>If you don&#39;t use a bundler like webpack, you could fetch the dictionaries from GitHub or a hosted website:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> packages <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;https://yourWebsite/zxcvbn-ts-language-common/passwords.json&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://yourWebsite/zxcvbn-ts-language-en/commonWords.json&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://yourWebsite/zxcvbn-ts-language-en/firstnames.json&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;https://yourWebsite/zxcvbn-ts-language-en/lastnames.json&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">loadDictionaries</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> promises <span class="token operator">=</span> packages<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>

    <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function m(b,g){const a=t("ExternalLinkIcon");return o(),p("div",null,[u,r,d,n("p",null,[s("Webpack supports lazy-loading with some configuration; check out the "),n("a",k,[s("documentation"),c(a)]),s(".")]),v])}const h=e(l,[["render",m],["__file","index.html.vue"]]);export{h as default};
